// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  firstName String
  lastName String
  pronouns String?
  year Int?
  major String?
  interests Int[]
  bio String?
  blockedUsers Int[]
  friends Int[]
}

model UserGeohash {
  id Int @id @default(autoincrement())
  userId Int @unique
  geohash String
}

model UserPastGeohash {
  id Int @id @default(autoincrement())
  userId Int
  timestamp DateTime
  geohash String
  duration Int
}

model FriendRequest {
  id Int @id @default(autoincrement())
  fromUser Int
  toUser Int
  acceptedAt DateTime?
}

model Message {
  id Int @id @default(autoincrement())
  fromUser Int
  toUser Int
  text String
  timestamp DateTime
  read Boolean @default(false)
}

model Session {
  id String @id
  sid String @unique
  data String
  expiresAt DateTime
}

model PlaceRecommendationWeights {
  id Int @id @default(autoincrement())
  userId Int @unique
  friendWeight Decimal @default(1)
  pastVisitWeight Decimal @default(1)
  countWeight Decimal @default(1)
  similarityWeight Decimal @default(1)
  distanceWeight Decimal @default(1)
  typeWeight Decimal @default(1)
  likedTypes String[] @default([])
}

model PasswordResetToken {
  id Int @id @default(autoincrement())
  userId Int @unique
  token String
  expiresAt DateTime
}
